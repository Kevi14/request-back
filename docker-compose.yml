version: "3.8"

services:
  # Development server container
  test:
    build: .
    volumes:
      - .:/app
    environment:
      - FLASK_APP=run.py
      - FLASK_CONFIG=test_config
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command:
      [
        "python",
        "-m",
        "unittest",
        "discover",
        "-s",
        "app/tests",
        "-p",
        "test_*.py",
      ]

  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=run.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_ENV=development
    depends_on:
      - db
    command:
      [
        "flask",
        "run",
        "--host=0.0.0.0",
        "--extra-files",
        "./**/*.py",
        "--reload",
      ]

  # Production server container using Gunicorn
  web-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod # Assuming you have a separate Dockerfile for production
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - FLASK_APP=run.py
    depends_on:
      - db
    command: ["gunicorn", "-b", "0.0.0.0:8000", "app:app"]

  # PostgreSQL container
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

volumes:
  postgres_data:
